{"version":3,"sources":["BooksAPI.js","components/Book.js","components/Shelf.js","components/FAB.js","Views/Home.js","Views/Search.js","Provider/index.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","update","book","shelf","fetch","id","method","body","JSON","stringify","then","res","json","search","query","data","books","Book","Component","handleChange","e","a","target","value","props","result","moveBook","console","log","render","className","style","width","height","backgroundImage","this","imageLinks","thumbnail","onChange","disabled","title","authors","Shelf","map","key","FAB","to","Home","componentDidMount","addBooks","currentlyReading","wantToRead","read","Search","constructor","super","setState","trim","results","error","state","type","placeholder","length","MyContext","React","createContext","index","filter","newShelf","allShelfs","newBooks","filteredBooks","find","bookID","Provider","children","BooksApp","showSearchPage","exact","path","Consumer","context","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8c1a92f4.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react'\r\nimport {update} from '../BooksAPI'\r\n\r\nexport default class Book extends Component {\r\n  handleChange = async e =>{\r\n    try {\r\n      const shelf = e.target.value;\r\n      const book = this.props;\r\n      const result = await update(book,shelf)\r\n      this.props.moveBook(book,shelf,result);\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  };\r\n    render() {\r\n        return (\r\n            <li>\r\n            <div className=\"book\">\r\n              <div className=\"book-top\">\r\n                <div className=\"book-cover\" \r\n                style={{ \r\n                  width: 128,\r\n                   height: 193,\r\n                   backgroundImage: `url(${this.props.imageLinks ?  this.props.imageLinks.thumbnail : \"\"})`\r\n                  }}\r\n                />\r\n\r\n                  <div/>\r\n                <div className=\"book-shelf-changer\">\r\n                  <select onChange = {this.handleChange} value={this.props.shelf}>\r\n                    <option value=\"move\" disabled>Move to...</option>\r\n                    <option value=\"currentlyReading\">Currently Reading</option>\r\n                    <option value=\"wantToRead\">Want to Read</option>\r\n                    <option value=\"read\">Read</option>\r\n                    <option value=\"none\">None</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"book-title\">{this.props.title}</div>\r\n              <div className=\"book-authors\">{this.props.authors ? this.props.authors[0] : \"No Author\"}</div>\r\n            </div>\r\n          </li>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Book from './Book'\r\n\r\nexport default class Shelf extends Component {\r\n    render() {\r\n        return (\r\n          <div className=\"bookshelf\">\r\n          <h2 className=\"bookshelf-title\">{this.props.title}</h2>\r\n            <div className=\"bookshelf-books\">\r\n            <ol className=\"books-grid\">\r\n            {this.props.books &&\r\n               this.props.books.map(\r\n                 book => \r\n                 <Book key={book.id} {...book}\r\n                 moveBook={this.props.moveBook}\r\n                 />)} \r\n            </ol>\r\n          </div>          \r\n        </div>\r\n        ) \r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class FAB extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"open-search\">\r\n              {/* <button onClick={() => this.setState({ showSearchPage: true })}>Add a book</button> */}\r\n              <Link to={\"/search\"}>Add a book</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Shelf from '../components/Shelf'\r\nimport FAB from '../components/FAB'\r\nimport {getAll} from \"../BooksAPI\"\r\n\r\n\r\nexport default class Home extends Component {\r\n    async componentDidMount(){\r\n        try {\r\n            const books = await getAll();\r\n            this.props.addBooks(books);\r\n\r\n        } catch (error) {\r\n           console.log(error) \r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n              <h1>MyReads</h1>\r\n            </div>\r\n            <div className=\"list-books-content\">\r\n            <Shelf \r\n            title=\"Currently Reading\"\r\n             books={this.props.currentlyReading} \r\n             moveBook={this.props.moveBook}/>\r\n\r\n            <Shelf \r\n            title=\"Want To Read\"\r\n             books={this.props.wantToRead}\r\n             moveBook={this.props.moveBook}/>\r\n\r\n            <Shelf \r\n            title=\"Read\"\r\n             books={this.props.read}\r\n             moveBook={this.props.moveBook}/>\r\n\r\n            </div>\r\n            <FAB/>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport {search} from \"../BooksAPI\"\r\nimport Book from '../components/Book'\r\n\r\n\r\nexport default class Search extends Component {\r\nconstructor(props){\r\n  super(props);\r\n  this.state = {\r\n    query: \"\",\r\n    books: []\r\n  }\r\n}\r\n\r\n  handleChange = async e =>{\r\n    try {\r\n      const query = e.target.value\r\n      this.setState({query})\r\n\r\n      if(query.trim()){\r\n      const results = await search(query)\r\n      if (results.error) {\r\n        this.setState({books: [] })\r\n      } else {\r\n        this.setState({books: results})\r\n      }\r\n    }else{\r\n      this.setState({books : []})\r\n    }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  };\r\n    render() {\r\n        return (\r\n            <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n              <Link className=\"close-search\"to={\"/\"}>\r\n                Close\r\n                </Link>\r\n              <div className=\"search-books-input-wrapper\">\r\n                <input type=\"text\" placeholder=\"Search by title or author\" onChange={this.handleChange} value={this.state.query}/>\r\n              </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n              <ol className=\"books-grid\">\r\n                {this.state.books.length > 0 && \r\n                this.state.books.map(book  => {\r\n                    //console.log(this.props.books);\r\n                    //const foundShelf = this.props.books.filter(searchBook => searchBook.id === book.id);\r\n                    return (<Book key={book.id} {...book} moveBook = {this.props.moveBook}/>);\r\n                  }                                 \r\n                  )}\r\n              </ol>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n","import React, {\r\n    Component\r\n} from 'react'\r\nexport const MyContext = React.createContext();\r\n\r\nexport default class index extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            books: [],\r\n            currentlyReading: [],\r\n            wantToRead: [],\r\n            read: [],\r\n            addBooks: books => {\r\n                const currentlyReading = books.filter(book => book.shelf === \"currentlyReading\");\r\n                const read = books.filter(book => book.shelf === \"read\");\r\n                const wantToRead = books.filter(book => book.shelf === \"wantToRead\")\r\n                this.setState({\r\n                    books,\r\n                    currentlyReading,\r\n                    read,\r\n                    wantToRead\r\n                })\r\n            },\r\n            moveBook: (book, newShelf, allShelfs) => {\r\n                debugger\r\n                const newBooks = this.state.books.map(filteredBooks => {\r\n                    const foundID = allShelfs[newShelf].find(\r\n                        bookID => bookID === filteredBooks.id\r\n                    );\r\n                    if (foundID) {\r\n                        filteredBooks.shelf = newShelf;\r\n                    }\r\n                    return filteredBooks;\r\n                });\r\n                this.state.addBooks(newBooks);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return ( <MyContext.Provider value = {{...this.state}} > \r\n                    {this.props.children} \r\n                </MyContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react'\nimport './App.css'\nimport {Switch,Route} from \"react-router-dom\"\nimport Home from './Views/Home';\nimport Search from './Views/Search';\nimport Provider,{MyContext} from './Provider'\n\nclass BooksApp extends React.Component {\n  state = {\n    showSearchPage: false\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n      <Provider>\n      <Switch>\n        <Route\n         exact path = {\"/\"}\n         render={()=>(\n         <MyContext.Consumer>\n         {context => <Home {...context}/>}\n         </MyContext.Consumer>\n         )}\n         />\n\n\n        <Route exact path = {\"/search\"} component = {Search} />\n      </Switch>\n      </Provider>\n      </div>      \n    ) \n  }\n}\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n<BrowserRouter>\n<App />\n</BrowserRouter>\n, document.getElementById('root'))\n"],"sourceRoot":""}